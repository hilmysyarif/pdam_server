{"version":3,"sources":["webpack:///./resources/js/bootstrap.js","webpack:///./resources/js/frontend.js","webpack:///./resources/sass/backend/backend.scss?acec","webpack:///./resources/sass/frontend/frontend.scss?8037"],"names":["library","add","fab","far","fas","dom","watch","window","$","jQuery","tooltip","selector","ClipboardJS","require","on","attr","ajaxSetup","headers","twOptions","callback","value","ajax","url","type","data","val","dataType","done","errors","removeClass","addClass","document","getElementById","innerHTML","success","fail","jqXHR","textStatus","html","wait","captureLength","highlight","allowSubmit","typeWatch","jsSocials","shareIn","showLabel","shares","share","logo","shareUrl"],"mappings":"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","file":"/js/frontend.js","sourcesContent":["/**\n * This bootstrap file is used for both frontend and backend\n */\n\n// import _ from 'lodash'\n// import axios from 'axios'\nimport $ from 'jquery';\nimport 'popper.js/dist/umd/popper'; // Required for BS4\nimport 'bootstrap';\n\n\n/**\n * Font Awesome >=5.1\n *\n * Is recommended import just the icons that you use, for decrease considerably the file size.\n * You can see at next link, how it works: https://github.com/FortAwesome/Font-Awesome/blob/master/UPGRADING.md#no-more-default-imports\n * Also you can import the icons separately on the frontend and backend\n */\n\nimport { library, dom } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(fab, far, fas);\n\n// Kicks off the process of finding <i> tags and replacing with <svg>\ndom.watch();\n\n\n\n/**\n * We'll load jQuery and the Bootstrap jQuery plugin which provides support\n * for JavaScript based Bootstrap features such as modals and tabs. This\n * code may be modified to fit the specific needs of your application.\n */\n\nwindow.$ = window.jQuery = $;\n// window._ = _; // Lodash\n\n\n\n/**\n * Bootstrap tooltips\n * https://getbootstrap.com/docs/4.1/components/tooltips/\n */\n$(\"body\").tooltip({\n    selector: '[data-toggle=\"tooltip\"]'\n});\n\n\n\n// /**\n//  * We'll load the axios HTTP library which allows us to easily issue requests\n//  * to our Laravel back-end. This library automatically handles sending the\n//  * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n//  */\n//\n// window.axios = axios;\n// window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n// /**\n//  * Next we will register the CSRF Token as a common header with Axios so that\n//  * all outgoing HTTP requests automatically have it attached. This is just\n//  * a simple convenience so we don't have to attach every token manually.\n//  */\n//\n// const token = document.head.querySelector('meta[name=\"csrf-token\"]');\n//\n// if (token) {\n//     window.axios.defaults.headers.common['X-CSRF-TOKEN'] = token.content;\n// } else {\n//     console.error('CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token');\n// }\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo'\n\n// window.Pusher = require('pusher-js');\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: process.env.MIX_PUSHER_APP_KEY\n//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,\n//     encrypted: true\n// });\n","import './bootstrap';\n\n/**\n * Copy short url to clipboard\n */\n// https://github.com/zenorocha/clipboard.js\nvar ClipboardJS = require('clipboard');\n\nnew ClipboardJS('.btn-clipboard').on('success', function() {\n    $('.btn-clipboard')\n        .attr('data-original-title','Copied!').tooltip(\"_fixTitle\").tooltip(\"show\")\n        .attr(\"title\", \"Copy to clipboard\").tooltip(\"_fixTitle\");\n});\n\n\n\n/**\n * Custom link Avail Check\n */\n// https://github.com/dennyferra/TypeWatch\nimport 'jquery.typewatch';\n\n$(function() {\n    $.ajaxSetup({\n        headers: {\n            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n        }\n    });\n\n    var twOptions = {\n        callback: function (value) {\n            $.ajax({\n                url: \"/custom-link-avail-check\",\n                type: 'POST',\n                data: {\n                    'url_key': $('#custom_url_key').val()\n                },\n                dataType: \"json\"\n            })\n            .done(function(data) {\n                if (data.errors) {\n                    $(\"#link-availability-status\")\n                        .removeClass(\"text-success\")\n                        .addClass(\"text-danger\");\n                    document.getElementById(\"link-availability-status\").innerHTML = data.errors[0];\n                } else {\n                    $(\"#link-availability-status\")\n                        .removeClass(\"text-danger\")\n                        .addClass(\"text-success\");\n                    document.getElementById(\"link-availability-status\").innerHTML = data.success;\n                }\n            }).fail(function (jqXHR, textStatus) {\n                document.getElementById(\"link-availability-status\").innerHTML = \"Hmm. We're having trouble connecting to the server.\";\n            });\n\n            $('#link-availability-status').html('<span><i class=\"fa fa-spinner\"></i> Loading..</span>');\n        },\n        wait: 500,\n        captureLength: 1,\n        highlight: true,\n        allowSubmit: false\n    };\n\n    // Add TypeWatch to check when users type\n    $('#custom_url_key').typeWatch(twOptions);\n});\n\n\n\n/**\n * Social Share\n * https://github.com/tabalinas/jssocials\n */\nimport 'jssocials';\n$(\"#jssocials\").jsSocials({\n    shareIn: \"popup\",\n    showLabel: false,\n    shares: [\n        { share: \"email\", logo: \"fas fa-envelope\" },\n        { share: \"facebook\", logo: \"fab fa-facebook\" },\n        { share: \"twitter\", logo: \"fab fa-twitter\" },\n        {\n            share: \"telegram\",\n            logo: \"fab fa-telegram\",\n            shareUrl: \"https://telegram.me/share/url?url={url}\",\n            shareIn: \"popup\"\n        }\n    ]\n});\n","// removed by extract-text-webpack-plugin","// removed by extract-text-webpack-plugin"],"sourceRoot":""}